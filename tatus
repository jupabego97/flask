warning: in the working copy of 'sw.js', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/sw.js b/sw.js[m
[1mindex 04d5ae0..6daf355 100644[m
[1m--- a/sw.js[m
[1m+++ b/sw.js[m
[36m@@ -1,8 +1,8 @@[m
 // Service Worker para PWA de Reparaciones IT[m
[31m-const CACHE_NAME = 'reparaciones-it-v2.1.3';[m
[31m-const STATIC_CACHE = 'static-v2.1.3';[m
[31m-const DYNAMIC_CACHE = 'dynamic-v2.1.3';[m
[31m-const IMAGES_CACHE = 'images-v2.1.3';[m
[32m+[m[32mconst CACHE_NAME = 'reparaciones-it-v2.1.2';[m
[32m+[m[32mconst STATIC_CACHE = 'static-v2.1.2';[m
[32m+[m[32mconst DYNAMIC_CACHE = 'dynamic-v2.1.2';[m
[32m+[m[32mconst IMAGES_CACHE = 'images-v2.1.2';[m
 [m
 // Recursos a cachear inicialmente (cr√≠ticos para primera carga)[m
 const STATIC_ASSETS = [[m
[36m@@ -32,7 +32,7 @@[m [mconst DYNAMIC_ASSETS = [[m
 [m
 // Instalaci√≥n del Service Worker[m
 self.addEventListener('install', (event) => {[m
[31m-    console.log('üì¶ Service Worker: Instalando versi√≥n 2.1.3...');[m
[32m+[m[32m    console.log('üì¶ Service Worker: Instalando versi√≥n 2.1.2...');[m
     event.waitUntil([m
         Promise.all([[m
             // Cache b√°sico cr√≠tico[m
[36m@@ -84,23 +84,11 @@[m [mfunction isOnline() {[m
     return navigator.onLine;[m
 }[m
 [m
[31m-// Funci√≥n para verificar si una petici√≥n es cacheable[m
[31m-function isCacheableRequest(request) {[m
[31m-    const url = new URL(request.url);[m
[31m-    // Solo cachear peticiones HTTP/HTTPS, no extensiones de Chrome u otros schemes[m
[31m-    return url.protocol === 'http:' || url.protocol === 'https:';[m
[31m-}[m
[31m-[m
 // Interceptar solicitudes de red[m
 self.addEventListener('fetch', (event) => {[m
     const { request } = event;[m
     const url = new URL(request.url);[m
 [m
[31m-    // Solo procesar peticiones HTTP/HTTPS (no extensiones de Chrome)[m
[31m-    if (!isCacheableRequest(request)) {[m
[31m-        return; // Dejar que el navegador maneje estas peticiones normalmente[m
[31m-    }[m
[31m-[m
     // Estrategia de cache para recursos est√°ticos cr√≠ticos[m
     if (STATIC_ASSETS.some(asset => request.url.includes(asset))) {[m
         event.respondWith([m
[36m@@ -111,20 +99,14 @@[m [mself.addEventListener('fetch', (event) => {[m
                     }[m
                     // Si no est√° en cache, intentar red[m
                     return fetch(request).then((fetchResponse) => {[m
[31m-                        console.log(`üåê SW: Fetch response ${fetchResponse.status} for ${request.url}`);[m
                         // Solo cachear respuestas exitosas[m
                         if (fetchResponse.status === 200) {[m
                             const responseClone = fetchResponse.clone();[m
                             caches.open(STATIC_CACHE).then((cache) => {[m
[31m-                                cache.put(request, responseClone).catch(err => {[m
[31m-                                    console.log(`‚ö†Ô∏è SW: Error cacheando ${request.url}:`, err);[m
[31m-                                });[m
[32m+[m[32m                                cache.put(request, responseClone);[m
                             });[m
                         }[m
                         return fetchResponse;[m
[31m-                    }).catch(err => {[m
[31m-                        console.log(`‚ùå SW: Fetch failed for ${request.url}:`, err);[m
[31m-                        throw err;[m
                     });[m
                 })[m
         );[m
[36m@@ -190,11 +172,8 @@[m [mself.addEventListener('fetch', (event) => {[m
                     if (response.status === 200) {[m
                         const responseClone = response.clone();[m
                         caches.open(DYNAMIC_CACHE).then((cache) => {[m
[31m-                            cache.put(request, responseClone).then(() => {[m
[31m-                                console.log(`üíæ SW: API response cached for ${request.url}`);[m
[31m-                            }).catch(err => {[m
[31m-                                console.log(`‚ö†Ô∏è SW: Error cacheando API ${request.url}:`, err);[m
[31m-                            });[m
[32m+[m[32m                            cache.put(request, responseClone);[m
[32m+[m[32m                            console.log(`üíæ SW: API response cached for ${request.url}`);[m
                         });[m
                     }[m
                     return response;[m
